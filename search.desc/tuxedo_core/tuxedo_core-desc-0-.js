searchState.loadedDescShard("tuxedo_core", 0, "This crate is the core of the Tuxedo runtime framework.\nThe executive. Each runtime is encouraged to make a type …\nAutomatically implements <code>From</code> for each type in an …\nDoes full verification and application of tuxedo …\nA helper function that allows tuxedo runtimes to read the …\nA constraint checker is a piece of logic that determines …\nDynamic Typing utilities for Tuxedo runtimes\nEvaluate <code>$x:expr</code> and if not true return <code>Err($y:expr)</code>.\nReturn Err of the expression: <code>return Err($expression);</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nUtilities for blockchainchain genesis used by Tuxedo.\nAPIs and utilities for working with Substrate’s …\nCalls <code>U::from(self)</code>.\nThese macros are copied from frame-support. Substrate …\nGeneral-purpose runtime traits for describing common types …\nThis macro treats the supplied enum as an aggregate …\nThis macro treats the supplied enum as an aggregate …\nThe common types that will be used across a Tuxedo …\nFor now this is a higher level description of the default …\nDoes pool-style validation of a tuxedo transaction. Does …\nA verifier is a piece of logic that determines whether an …\nThe raw and fully powerful <code>ConstraintChecker</code> interface …\nThe error type that this constraint checker may return\nThe error type that this constraint checker may return\nA particular constraint checker that a transaction can …\nThe on chain logic that makes the final check for whether …\nThe on chain logic that makes the final check for whether …\nPerform off-chain pre-execution checks on the inherents. …\nCreate the inherent extrinsics to insert into a block that …\nReturn the genesis transactions that are required for the …\nTells whether this extrinsic is an inherent or not. If you …\nAlthough the types matched, the data could not be decoded …\nErrors that can occur when casting dynamically typed data …\nA piece of encoded data with a type id associated Strongly …\nA unique identifier for this type. For now choosing this …\nA trait that must be implemented for any data that can be …\nThe data provided was not of the target decoding type.\nExtracts strongly typed data from an Output, iff the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA bogus data type for use in tests.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThis function expects a list of transactions to be …\nBuild the genesis block, including the extrinsics found in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn adapter type to declare, at the runtime level, that …\nTuxedo’s controlled interface around Substrate’s …\nAn inherent identifier for the Tuxedo parent block inherent\nAn inherent data provider that inserts the previous block …\nPerform off-chain pre-execution checks on the inherent. …\nCreate the inherent extrinsic to insert into a block that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the genesis transactions that are required for this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDerive [<code>Clone</code>] but do not bound any generic. Docs are at …\nDerive [<code>Debug</code>] but do not bound any generics. Docs are at …\nderive <code>Default</code> but do no bound any generic. Docs are at …\nA trait for UTXOs that can act like coins, or bank notes.\nA 1-byte unique identifier for this coin. Might need more …\nGet the value of this token.\nAn alias for a Tuxedo block with all the common parts …\nAll Tuxedo chains use the same u32 BlockNumber.\nThe constraint checker errored.\nThe Result of dispatching a UTXO transaction.\nThis transaction defines the same input multiple times\nContains the error value\nThe input is being forcefully evicted without satisfying …\nBecause all tuxedo chains use the same Blocknumber and …\nA reference the a utxo that will be consumed along with …\nOne or more of the inputs required by this transaction is …\nContains the success value\nOpaque block type. It has a Standard Tuxedo header, and …\nOpaque block hash type.\nAn opaque piece of Transaction output data. This is how …\nA reference to a output that is expected to exist in the …\nThis transaction defines an output that already existed in …\nThe input is being consumed in the normal way with a …\nAn input can be consumed in two way. It can be redeemed …\nA UTXO Transaction\nThe Verifier errored. TODO determine whether it is useful …\nWhich piece of constraint checking logic is used to …\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe block header.\nThe block header.\nThe index of this output among all outputs created by the …\nExisting pieces of state to be read and consumed from …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe block number.\na reference to the output being consumed\nNew state to be placed into storage\nThe parent hash.\nExisting state to be read, but not consumed, from storage\nA means of showing that this input data can be used. It is …\nThe state trie merkle root\nA helper function for transforming a transaction generic …\nA hash of the transaction that created this output\nConsume a Utxo from the set.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nFetch a utxo from the set.\nAdd a utxo into the set. This will overwrite any utxo that …\nAllows UTXOs to be spent when a preimage to a recorded …\nPay To Public Key Hash (P2PKH)\nThe type that will be supplied to satisfy the verifier and …\nRequire a signature from the private key corresponding to …\nA testing verifier that passes or depending on the enclosed\nAllows UTXOs to be spent after a certain block height has …\nA simple verifier that allows no one to consume an output …\nA simple verifier that allows anyone to consume an output …\nA means of checking that an output can be spent. This …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance that requires a signature from the …\nA way to create a new instance of the verifier whose …\nAll the member signatories, some (or all depending on the …\nThe minimum number of valid signatures needed to consume …\nWhether the verifier should pass\nMain function in the trait. Does the checks to make sure …")