searchState.loadedDescShard("tuxedo_parachain_runtime", 0, "The Tuxedo Template Runtime is an example runtime that uses\nChecks that a single amoeba is simply created from the void…\nChecks that a single amoeba is simply removed from the …\nChecks that an amoeba can split into two new amoebas\nChecks Free Kitty transactions\nAll other calls are delegated to the normal Tuxedo …\nA constraint checker is a piece of logic that can be used …\nChecks monetary transactions in a basic fungible …\nA verifier checks that an individual input can be …\nThe Outer / Aggregate Constraint Checker for the Parachain …\nThis type is generated by the <code>#[tuxedo_constraint_checker]</code> …\nSet some parachain related information via an inherent …\nChecks that new valid proofs of existence are claimed\nChecks that one winning claim came earlier than all the …\nChecks that proofs of existence are revoked.\nThe main struct in this module.\nImplements all runtime apis for the client side.\nUpgrade the Wasm Runtime\nSet the block’s timestamp via an inherent extrinsic.\nThis runtime version.\nWhich piece of constraint checking logic is used to …\nThe accompanying extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHelper module to build a genesis configuration for the …\nThe block header.\nExisting pieces of state to be read and consumed from …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe version information used to identify this runtime when …\nOpaque types. These are used by the CLI to instantiate …\nNew state to be placed into storage\nExisting state to be read, but not consumed, from storage\nDecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate a set of keys with optionally using the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.")