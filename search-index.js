var searchIndex = JSON.parse('{\
"aggregator":{"doc":"","t":"XXX","n":["aggregate","tuxedo_constraint_checker","tuxedo_verifier"],"q":[[0,"aggregator"]],"d":["Automatically implements <code>From</code> for each type in an …","This macro treats the supplied enum as an aggregate …","This macro treats the supplied enum as an aggregate …"],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[],"b":[]},\
"amoeba":{"doc":"This file represents a simple example Tuxedo piece that …","t":"DDDDNNENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AmoebaCreation","AmoebaDeath","AmoebaDetails","AmoebaMitosis","BadlyTypedInput","BadlyTypedOutput","ConstraintCheckerError","CreatedNothing","CreatedTooMany","CreationMayNotConsume","DeathMayNotCreate","NoVictim","TooManyVictims","WrongGeneration","WrongNumberOfDaughters","WrongNumberOfMothers","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","check","check","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","four_bytes","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","generation","init","init","init","init","init","into","into","into","into","into","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"amoeba"],[184,"dyn_clone::sealed"],[185,"tuxedo_core::types"],[186,"core::result"],[187,"tuxedo_core::dynamic_typing"],[188,"sp_runtime::transaction_validity"],[189,"parity_scale_codec::error"],[190,"parity_scale_codec::codec"],[191,"serde::de"],[192,"parity_scale_codec::codec"],[193,"core::fmt"],[194,"core::fmt"],[195,"alloc::alloc"],[196,"alloc::vec"],[197,"core::any"],[198,"scale_info::ty"]],"d":["A constraint checker for simple creation of an amoeba.","A constraint checker for simple death of an amoeba.","An amoeba tracked by our simple Amoeba APP","A constraint checker for the process of amoeba mitosis The …","An input data has the wrong type.","An output data has the wrong type.","Reasons that the amoeba constraint checkers may fail","Amoeba creation requires a new amoeba to be created, but …","Amoeba creation is not a mass operation. Only one new …","No input may be consumed by amoeba creation.","No output may be created by amoeba death.","Amoeba death requires a “victim” amoeba that will be …","Amoeba death is not a mass operation. Only one “victim”…","The daughters did not have to right generation based on …","Amoeba mitosis requires exactly two daughter amoebas to be …","Amoeba mitosis requires exactly one mother amoeba to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Four totally arbitrary bytes that each amoeba has. There …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","How many generations after the original Eve Amoeba this …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,10,10,0,10,10,10,10,10,10,10,10,10,13,7,11,12,13,10,7,11,12,13,10,7,11,12,7,7,11,11,12,12,13,7,11,12,13,7,11,12,13,7,11,12,13,7,11,12,13,7,11,12,13,7,11,12,13,10,7,11,12,13,10,7,11,12,13,7,11,12,13,10,7,11,12,13,7,11,12,13,10,7,11,12,13,13,13,10,10,10,7,7,7,11,11,11,12,12,12,13,10,7,11,12,13,13,10,7,11,12,13,10,7,11,12,13,10,7,11,12,13,13,10,7,11,12,13,10,7,11,12,13,7,11,12,13,7,11,12,13,7,11,12,13,7,11,12,13,10,7,11,12,13,10,7,11,12,13,10,7,11,12,7,11,12,13,10,7,11,12,13,10,7,11,12,13,10,7,11,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[4,[[3,[-2]]]],[4,[[3,[-2]]]],[4,[[3,[-2]]]]],[[6,[5]]],[],[]],[[7,[4,[8]],[4,[8]],[4,[8]]],[[6,[9,10]]]],[[11,[4,[8]],[4,[8]],[4,[8]]],[[6,[9]]]],[[-1,[4,[[3,[-2]]]],[4,[[3,[-2]]]],[4,[[3,[-2]]]]],[[6,[5]]],[],[]],[[-1,[4,[[3,[-2]]]],[4,[[3,[-2]]]],[4,[[3,[-2]]]]],[[6,[5]]],[],[]],[[12,[4,[8]],[4,[8]],[4,[8]]],[[6,[9]]]],[13,13],[7,7],[11,11],[12,12],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[6,[13,14]]],15],[-1,[[6,[7,14]]],15],[-1,[[6,[11,14]]],15],[-1,[[6,[12,14]]],15],[[[4,[16]]],[[6,[-1,14]]],[]],[[[4,[16]]],[[6,[-1,14]]],[]],[[[4,[16]]],[[6,[-1,14]]],[]],[[[4,[16]]],[[6,[-1,14]]],[]],[[17,[4,[16]]],[[6,[-1,14]]],[]],[[17,[4,[16]]],[[6,[-1,14]]],[]],[[17,[4,[16]]],[[6,[-1,14]]],[]],[[17,[4,[16]]],[[6,[-1,14]]],[]],[[17,-1],[[6,[-2,14]]],15,[]],[[17,-1],[[6,[-2,14]]],15,[]],[[17,-1],[[6,[-2,14]]],15,[]],[[17,-1],[[6,[-2,14]]],15,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[6,[13]]],19],[-1,[[6,[7]]],19],[-1,[[6,[11]]],19],[-1,[[6,[12]]],19],[18,2],[18,2],[18,2],[18,2],[18,2],[[13,-1],2,[20,21]],[[7,-1],2,[20,21]],[[11,-1],2,[20,21]],[[12,-1],2,[20,21]],[[13,13],22],[[10,10],22],[[7,7],22],[[11,11],22],[[12,12],22],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[13,23],24],[[10,23],24],[[7,23],24],[[11,23],24],[[12,23],24],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,-1],6,25],[[7,-1],6,25],[[11,-1],6,25],[[12,-1],6,25],[13,18],[7,18],[11,18],[12,18],[[-1,[4,[16]]],[[27,[16,26]]],[]],[[-1,[4,[16]]],[[27,[16,26]]],[]],[[-1,[4,[16]]],[[27,[16,26]]],[]],[[-1,[4,[16]]],[[27,[16,26]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[],29],[[],29],[[],29],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",184],[15,"tuple"],[3,"Output",185],[15,"slice"],[15,"u64"],[4,"Result",186],[3,"AmoebaMitosis",0],[3,"DynamicallyTypedData",187],[6,"TransactionPriority",188],[4,"ConstraintCheckerError",0],[3,"AmoebaDeath",0],[3,"AmoebaCreation",0],[3,"AmoebaDetails",0],[3,"Error",189],[8,"Input",190],[15,"u8"],[15,"u32"],[15,"usize"],[8,"Deserializer",191],[8,"Output",190],[8,"Sized",192],[15,"bool"],[3,"Formatter",193],[6,"Result",193],[8,"Serializer",194],[3,"Global",195],[3,"Vec",196],[3,"TypeId",197],[3,"Type",198]],"b":[]},\
"derive_no_bound":{"doc":"Macros to derive common traits without bounds","t":"YYY","n":["CloneNoBound","DebugNoBound","DefaultNoBound"],"q":[[0,"derive_no_bound"]],"d":["Derive <code>Clone</code> but do not bound any generic. Docs are at …","Derive <code>Debug</code> but do not bound any generics. Docs are at …","derive <code>Default</code> but do no bound any generic. Docs are at …"],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[],"b":[]},\
"kitties":{"doc":"An NFT game inspired by cryptokitties. This is a game …","t":"NENENDNDDDNNENNNNNNNNNNNNENNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BadlyTyped","ConstraintCheckerError","Dad","DadKittyStatus","DadTooTired","FreeKittyConstraintChecker","HadBirthRecently","KittyDNA","KittyData","KittyHelpers","MinimumSpendAndBreedNotMet","Mom","MomKittyStatus","MomNotReadyYet","NewChildDnaIncorrect","NewChildFreeBreedingsIncorrect","NewChildHasNonZeroBreedings","NewChildIncorrectParentInfo","NewDadIsStillRearinToGo","NewMomIsStillRearinToGo","NewParentDnaDoesntMatchOld","NewParentFreeBreedingsIncorrect","NewParentNumberBreedingsIncorrect","NotEnoughFamilyMembers","NotEnoughFreeBreedings","Parent","RearinToGo","RearinToGo","Tired","TooManyBreedingsForKitty","TwoDadsNotValid","TwoMomsNotValid","TwoParentsDoNotExist","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dna","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_breedings","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_clear","is_clear","is_clear","is_clear","is_clear","num_breedings","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"kitties"],[346,"dyn_clone::sealed"],[347,"tuxedo_core::dynamic_typing"],[348,"sp_runtime::transaction_validity"],[349,"core::result"],[350,"tuxedo_core::types"],[351,"core::cmp"],[352,"parity_scale_codec::error"],[353,"parity_scale_codec::codec"],[354,"serde::de"],[355,"alloc::vec"],[356,"parity_scale_codec::codec"],[357,"core::fmt"],[358,"core::fmt"],[359,"core::hash"],[360,"serde::ser"],[361,"alloc::alloc"],[362,"core::any"],[363,"scale_info::ty"],[364,"core::ops::function"]],"d":["Dynamic typing issue. This error doesn’t discriminate …","","","","Dad cannot breed because he is still too tired.","","","","","","Needed when spending for breeding.","","","Mom has recently given birth and isnt ready to breed.","New child DNA is not correct given the protocol.","New child doesnt have the correct number of free breedings.","New child has non zero breedings which is impossible …","New child parent info is either in Tired state or …","New Dad after breeding should be in Tired state.","New Mom after breeding should be in HadBirthRecently state.","New parents DNA does not match the old one parent has to …","Number of free breedings of new parent is not correct.","New parent Breedings has not incremented or is incorrect.","Incorrect number of outputs when it comes to breeding.","Not enough free breedings available for these parents.","","","","","Too many breedings for this kitty can no longer breed.","Cannot have two dads when breeding.","Cannot have two moms when breeding.","Need two parents to breed.","","","","","","","","","","","","","","","","","","","","","","","","Checks: - <code>input_data</code> is of length 2 - <code>output_data</code> is of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[15,0,12,0,15,0,11,0,0,0,15,12,0,15,15,15,15,15,15,15,15,15,15,15,15,0,10,11,10,15,15,15,15,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,3,3,10,11,12,13,14,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,10,11,12,13,14,38,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,3,10,11,12,13,14,15,14,38,3,10,11,12,13,14,15,13,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,3,3,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,3,10,11,12,13,14,15,14,38,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,10,11,12,13,14,14,14,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,3,10,11,12,13,14,15,38,3,10,11,12,13,14,14,15,38,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,38,3,10,11,12,13,14,15,13,38,3,10,11,12,13,14,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,[5,[4]],[5,[4]],[5,[4]]],[[7,[6]]]],[[-1,[5,[[8,[-2]]]],[5,[[8,[-2]]]],[5,[[8,[-2]]]]],[[7,[9]]],[],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[3,3],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[3,3],16],[[10,10],16],[[11,11],16],[[12,12],16],[[13,13],16],[[14,14],16],[[15,15],16],[-1,[[7,[3,17]]],18],[-1,[[7,[10,17]]],18],[-1,[[7,[11,17]]],18],[-1,[[7,[12,17]]],18],[-1,[[7,[13,17]]],18],[-1,[[7,[14,17]]],18],[-1,[[7,[15,17]]],18],[[[5,[19]]],[[7,[-1,17]]],[]],[[[5,[19]]],[[7,[-1,17]]],[]],[[[5,[19]]],[[7,[-1,17]]],[]],[[[5,[19]]],[[7,[-1,17]]],[]],[[[5,[19]]],[[7,[-1,17]]],[]],[[[5,[19]]],[[7,[-1,17]]],[]],[[[5,[19]]],[[7,[-1,17]]],[]],[[20,[5,[19]]],[[7,[-1,17]]],[]],[[20,[5,[19]]],[[7,[-1,17]]],[]],[[20,[5,[19]]],[[7,[-1,17]]],[]],[[20,[5,[19]]],[[7,[-1,17]]],[]],[[20,[5,[19]]],[[7,[-1,17]]],[]],[[20,[5,[19]]],[[7,[-1,17]]],[]],[[20,[5,[19]]],[[7,[-1,17]]],[]],[[20,-1],[[7,[-2,17]]],18,[]],[[20,-1],[[7,[-2,17]]],18,[]],[[20,-1],[[7,[-2,17]]],18,[]],[[20,-1],[[7,[-2,17]]],18,[]],[[20,-1],[[7,[-2,17]]],18,[]],[[20,-1],[[7,[-2,17]]],18,[]],[[20,-1],[[7,[-2,17]]],18,[]],[[],10],[[],11],[[],12],[[],13],[[],14],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[7,[3]]],22],[-1,[[7,[10]]],22],[-1,[[7,[11]]],22],[-1,[[7,[12]]],22],[-1,[[7,[13]]],22],[-1,[[7,[14]]],22],[-1,[[7,[15]]],22],0,[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[13,[[23,[19]]]],[[3,-1],2,[24,25]],[[10,-1],2,[24,25]],[[11,-1],2,[24,25]],[[12,-1],2,[24,25]],[[13,-1],2,[24,25]],[[14,-1],2,[24,25]],[[15,-1],2,[24,25]],[[3,3],26],[[10,10],26],[[11,11],26],[[12,12],26],[[13,13],26],[[14,14],26],[[15,15],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[3,27],28],[[10,27],28],[[11,27],28],[[12,27],28],[[13,27],28],[[14,27],28],[[15,27],28],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],9,[29,25],30],[[-1,-2],9,[29,25],30],[[-1,-2],9,[29,25],30],[[-1,-2],9,[29,25],30],[[-1,-2],9,[29,25],30],[[-1,-2],9,[29,25],30],[[-1,-2],9,[29,25],30],[[3,-1],2,31],[[10,-1],2,31],[[11,-1],2,31],[[12,-1],2,31],[[13,-1],2,31],[[14,-1],2,31],[[15,-1],2,31],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,0,[[3,3],[[32,[16]]]],[[10,10],[[32,[16]]]],[[11,11],[[32,[16]]]],[[12,12],[[32,[16]]]],[[13,13],[[32,[16]]]],[[14,14],[[32,[16]]]],[[15,15],[[32,[16]]]],[[3,-1],7,33],[[10,-1],7,33],[[11,-1],7,33],[[12,-1],7,33],[[13,-1],7,33],[[14,-1],7,33],[[15,-1],7,33],[3,21],[10,21],[11,21],[12,21],[13,21],[14,21],[15,21],[[-1,[5,[19]]],[[23,[19,34]]],[]],[[-1,[5,[19]]],[[23,[19,34]]],[]],[[-1,[5,[19]]],[[23,[19,34]]],[]],[[-1,[5,[19]]],[[23,[19,34]]],[]],[[-1,[5,[19]]],[[23,[19,34]]],[]],[[-1,[5,[19]]],[[23,[19,34]]],[]],[[-1,[5,[19]]],[[23,[19,34]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[4,[[7,[14]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,-1],-2,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",346],[15,"tuple"],[3,"FreeKittyConstraintChecker",0],[3,"DynamicallyTypedData",347],[15,"slice"],[6,"TransactionPriority",348],[4,"Result",349],[3,"Output",350],[15,"u64"],[4,"DadKittyStatus",0],[4,"MomKittyStatus",0],[4,"Parent",0],[3,"KittyDNA",0],[3,"KittyData",0],[4,"ConstraintCheckerError",0],[4,"Ordering",351],[3,"Error",352],[8,"Input",353],[15,"u8"],[15,"u32"],[15,"usize"],[8,"Deserializer",354],[3,"Vec",355],[8,"Output",353],[8,"Sized",356],[15,"bool"],[3,"Formatter",357],[6,"Result",357],[8,"Hash",358],[8,"BuildHasher",358],[8,"Hasher",358],[4,"Option",359],[8,"Serializer",360],[3,"Global",361],[3,"TypeId",362],[3,"Type",363],[8,"FnOnce",364],[3,"KittyHelpers",0]],"b":[]},\
"money":{"doc":"An implementation of a simple fungible token.","t":"NDENNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BadlyTyped","Coin","ConstraintCheckerError","Mint","MintingNothing","MintingWithInputs","MoneyConstraintChecker","OutputsExceedInputs","Spend","SpendingNothing","ValueOverflow","ZeroValueCoin","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","check","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","encode","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","into","into","into","new","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","value","vzip","vzip","vzip"],"q":[[0,"money"],[135,"dyn_clone::sealed"],[136,"tuxedo_core::dynamic_typing"],[137,"sp_runtime::transaction_validity"],[138,"core::result"],[139,"tuxedo_core::types"],[140,"core::cmp"],[141,"parity_scale_codec::error"],[142,"parity_scale_codec::codec"],[143,"serde::de"],[144,"alloc::vec"],[145,"parity_scale_codec::codec"],[146,"core::fmt"],[147,"core::fmt"],[148,"core::hash"],[149,"serde::ser"],[150,"alloc::alloc"],[151,"core::any"],[152,"scale_info::ty"],[153,"core::ops::function"]],"d":["Dynamic typing issue. This error doesn’t discriminate …","A single coin in the fungible money system. A new-type …","Errors that can occur when checking money transactions.","A mint transaction that creates no coins out of the void. …","The transaction attempts to mint zero coins. This is not …","The transaction attempts to consume inputs while minting. …","The main constraint checker for the money piece. Allows …","The value of the spent input coins is less than the value …","A typical spend transaction where some coins are consumed …","The transaction attempts to spend without consuming any …","The value consumed or created by this transaction …","The transaction attempted to create a coin with zero …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[11,0,0,3,11,11,0,11,3,11,11,11,3,10,11,3,10,11,3,10,11,3,3,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,10,3,10,11,3,10,11,3,3,3,10,10,10,11,11,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,10,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,10,10,3,10,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,[5,[4]],[5,[4]],[5,[4]]],[[7,[6]]]],[[-1,[5,[[8,[-2]]]],[5,[[8,[-2]]]],[5,[[8,[-2]]]]],[[7,[9]]],[],[]],[3,3],[10,10],[11,11],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[3,3],12],[[10,10],12],[[11,11],12],[-1,[[7,[3,13]]],14],[-1,[[7,[10,13]]],14],[-1,[[7,[11,13]]],14],[[[5,[15]]],[[7,[-1,13]]],[]],[[[5,[15]]],[[7,[-1,13]]],[]],[[[5,[15]]],[[7,[-1,13]]],[]],[[16,[5,[15]]],[[7,[-1,13]]],[]],[[16,[5,[15]]],[[7,[-1,13]]],[]],[[16,[5,[15]]],[[7,[-1,13]]],[]],[[16,-1],[[7,[-2,13]]],14,[]],[[16,-1],[[7,[-2,13]]],14,[]],[[16,-1],[[7,[-2,13]]],14,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[-1,[[7,[3]]],18],[-1,[[7,[10]]],18],[-1,[[7,[11]]],18],[17,2],[17,2],[17,2],[10,[[19,[15]]]],[[3,-1],2,[20,21]],[[10,-1],2,[20,21]],[[11,-1],2,[20,21]],[[3,3],22],[[10,10],22],[[11,11],22],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[3,23],24],[[10,23],24],[[11,23],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],9,[25,21],26],[[-1,-2],9,[25,21],26],[[-1,-2],9,[25,21],26],[[3,-1],2,27],[[10,-1],2,27],[[11,-1],2,27],[[],17],[[],17],[[],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,10],[[3,3],[[29,[12]]]],[[10,10],[[29,[12]]]],[[11,11],[[29,[12]]]],[[3,-1],7,30],[[10,-1],7,30],[[11,-1],7,30],[3,17],[10,17],[11,17],[[-1,[5,[15]]],[[19,[15,31]]],[]],[[-1,[5,[15]]],[[19,[15,31]]],[]],[[-1,[5,[15]]],[[19,[15,31]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[[],33],[[],33],[[],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,-1],-2,34,[]],[10,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",135],[15,"tuple"],[4,"MoneyConstraintChecker",0],[3,"DynamicallyTypedData",136],[15,"slice"],[6,"TransactionPriority",137],[4,"Result",138],[3,"Output",139],[15,"u64"],[3,"Coin",0],[4,"ConstraintCheckerError",0],[4,"Ordering",140],[3,"Error",141],[8,"Input",142],[15,"u8"],[15,"u32"],[15,"usize"],[8,"Deserializer",143],[3,"Vec",144],[8,"Output",142],[8,"Sized",145],[15,"bool"],[3,"Formatter",146],[6,"Result",146],[8,"Hash",147],[8,"BuildHasher",147],[8,"Hasher",147],[15,"u128"],[4,"Option",148],[8,"Serializer",149],[3,"Global",150],[3,"TypeId",151],[3,"Type",152],[8,"FnOnce",153]],"b":[]},\
"node_template":{"doc":"","t":"AAAGFFEDNNLLLLLLMLLFMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLL","n":["chain_spec","rpc","service","ChainSpec","development_config","local_testnet_config","DenyUnsafe","FullDeps","No","Yes","__clone_box","borrow","borrow","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","pool","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","ExecutorDispatch","NativeElseWasmExecutor","__clone_box","allow_missing_host_functions","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deref","deref","deref_mut","deref_mut","dispatch","drop","drop","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","native_version","native_version","new","new_full","new_partial","new_with_wasm_executor","read_runtime_version","runtime_version","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"node_template"],[3,"node_template::chain_spec"],[6,"node_template::rpc"],[60,"node_template::service"],[117,"alloc::string"],[118,"core::result"],[119,"dyn_clone::sealed"],[120,"sc_rpc_api::policy"],[121,"jsonrpsee_core::server::rpc_module"],[122,"core::error"],[123,"alloc::boxed"],[124,"tuxedo_template_runtime::opaque"],[125,"sp_api"],[126,"sp_blockchain::backend"],[127,"sp_blockchain::header_metadata"],[128,"core::marker"],[129,"core::marker"],[130,"core::fmt"],[131,"core::fmt"],[132,"core::any"],[133,"alloc::sync"],[134,"alloc::rc"],[135,"core::any"],[136,"sp_externalities"],[137,"sp_core::traits"],[138,"sp_core::traits"],[139,"sc_executor_common::error"],[140,"core::option"],[141,"sp_version"],[142,"sc_executor::wasm_runtime"],[143,"sc_service::config"],[144,"sc_service::task_manager"],[145,"sc_service::error"],[146,"tuxedo_template_runtime"],[147,"sc_service::builder"],[148,"sc_service::builder"],[149,"sc_consensus::import_queue"],[150,"sc_transaction_pool"],[151,"sc_consensus_grandpa::import"],[152,"sc_consensus_grandpa"],[153,"sc_telemetry"],[154,"sc_service"],[155,"sp_io::storage"],[156,"sp_io::default_child_storage"],[157,"sp_io::misc"],[158,"sp_io::wasm_tracing"],[159,"sp_io::offchain"],[160,"sp_io::crypto"],[161,"sp_io::hashing"],[162,"sp_io::allocator"],[163,"sp_io::panic_handler"],[164,"sp_io::logging"],[165,"sp_io::trie"],[166,"sp_io::offchain_index"],[167,"sp_io::transaction_index"],[168,"sp_wasm_interface"],[169,"sc_executor::executor"]],"d":["","A collection of node-specific RPC methods. Substrate …","Service and ServiceFactory implementation. Specialized …","Specialized <code>ChainSpec</code>. This is a specialization of the …","","","Signifies whether a potentially unsafe RPC should be …","Full client dependencies.","Allows calling every RPCs.","Denies only potentially unsafe RPCs.","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Instantiate all full RPC extensions.","Whether to deny unsafe calls","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","","","","A generic <code>CodeExecutor</code> implementation that uses a delegate …","","Ignore missing function imports if set true.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create new instance.","Builds a new service for a full client.","","Create a new instance using the given <code>WasmExecutor</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,6,6,6,8,6,8,6,6,8,6,6,0,8,8,6,8,6,8,6,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,0,0,28,28,46,28,46,28,28,28,28,46,28,46,28,46,46,28,46,28,46,28,46,28,46,28,46,28,46,28,46,28,46,28,46,28,28,0,0,28,28,28,28,46,28,46,28,46,28,46,28,46,28,46,28,46,28],"f":[0,0,0,0,[[],[[3,[1,2]]]],[[],[[3,[1,2]]]],0,0,0,0,[[-1,4],5,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,[[3,[5,7]]]],0,[6,6],[[-1,-2],5,[],[]],[[[8,[-1,-2]]],[[3,[[9,[5]],[11,[10]]]]],[[13,[12]],[14,[12]],[15,[12]],16,17],18],0,[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,5],[19,5],[[6,20],[[3,[5,21]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1,22]]],[[11,[23,22]]],[]],[[[11,[-1,22]]],[[11,[23,22]]],[]],[[[24,[-1,22]]],[[24,[23,22]]],[]],[[[24,[-1,22]]],[[24,[23,22]]],[]],[[[25,[-1,22]]],[[25,[23,22]]],[]],[[[25,[-1,22]]],[[25,[23,22]]],[]],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,4],5,[]],[[[28,[-1]],29],5,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]],31,32,27,[34,[33]],29,35],[[5,[[3,[[36,[33,22]],37]],29]]],30],[[[28,[-1]]],[[28,[-1]]],30],[[-1,-2],5,[],[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[[27,[34,[33]]],[[38,[[36,[33]]]]]],[19,5],[19,5],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1,22]]],[[11,[23,22]]],[]],[[[11,[-1,22]]],[[11,[23,22]]],[]],[[[24,[-1,22]]],[[24,[23,22]]],[]],[[[24,[-1,22]]],[[24,[23,22]]],[]],[[[25,[-1,22]]],[[25,[23,22]]],[]],[[[25,[-1,22]]],[[25,[23,22]]],[]],[[],39],[[[28,[-1]]],39,30],[[40,[38,[41]],19,33],[[28,[-1]]],30],[42,[[3,[43,44]]]],[42,[[3,[[55,[[47,[12,45,[28,[46]]]],[48,[12]],[49,[[48,[12]],12]],[50,[12]],[51,[12,[47,[12,45,[28,[46]]]]]],[5,[[52,[[48,[12]],12,[47,[12,45,[28,[46]]]],[49,[[48,[12]],12]]]],[53,[12,[47,[12,45,[28,[46]]]],[49,[[48,[12]],12]]]],[38,[54]]]]]],44]]]],[[[70,[[69,[[5,[56,57,58,59,60,61,62,63,64,65,66,67,68]]]]]]],[[28,[-1]]],30],[[[28,[-1]],[34,[33]],31],[[3,[[36,[33,22]],2]]],30],[[[28,[-1]],31,32],[[3,[71,37]]],30],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[63,96],"p":[[6,"ChainSpec",3],[3,"String",117],[4,"Result",118],[3,"Private",119],[15,"tuple"],[4,"DenyUnsafe",6],[3,"UnsafeRpcError",120],[3,"FullDeps",6],[3,"RpcModule",121],[8,"Error",122],[3,"Box",123],[6,"Block",124],[8,"ProvideRuntimeApi",125],[8,"HeaderBackend",126],[8,"HeaderMetadata",127],[8,"Send",128],[8,"Sync",128],[8,"TransactionPool",129],[15,"usize"],[3,"Formatter",130],[3,"Error",130],[3,"Global",131],[8,"Any",132],[3,"Arc",133],[3,"Rc",134],[3,"TypeId",132],[15,"str"],[3,"NativeElseWasmExecutor",60],[15,"bool"],[8,"NativeExecutionDispatch",135],[8,"Externalities",136],[3,"RuntimeCode",137],[15,"u8"],[15,"slice"],[4,"CallContext",137],[3,"Vec",138],[4,"Error",139],[4,"Option",140],[3,"NativeVersion",141],[4,"WasmExecutionMethod",142],[15,"u64"],[3,"Configuration",143],[3,"TaskManager",144],[4,"Error",145],[3,"RuntimeApi",146],[3,"ExecutorDispatch",60],[6,"TFullClient",147],[6,"TFullBackend",147],[3,"LongestChain",148],[6,"DefaultImportQueue",149],[6,"FullPool",150],[3,"GrandpaBlockImport",151],[3,"LinkHalf",152],[3,"Telemetry",153],[3,"PartialComponents",154],[3,"HostFunctions",155],[3,"HostFunctions",156],[3,"HostFunctions",157],[3,"HostFunctions",158],[3,"HostFunctions",159],[3,"HostFunctions",160],[3,"HostFunctions",161],[3,"HostFunctions",162],[3,"HostFunctions",163],[3,"HostFunctions",164],[3,"HostFunctions",165],[3,"HostFunctions",166],[3,"HostFunctions",167],[3,"ExtendedHostFunctions",168],[3,"WasmExecutor",135],[3,"RuntimeVersion",141]],"b":[]},\
"poe":{"doc":"This file represents a simple Proof of Existence …","t":"NNENDIDDNNLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BadlyTypedInput","BadlyTypedOutput","ConstraintCheckerError","EffectiveHeightInPast","PoeClaim","PoeConfig","PoeDispute","PoeRevoke","WrongNumberInputs","WrongNumberOutputs","__clone_box","__clone_box","__clone_box","__clone_box","block_height","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","check","check","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip"],"q":[[0,"poe"],[158,"dyn_clone::sealed"],[159,"tuxedo_core::dynamic_typing"],[160,"sp_runtime::transaction_validity"],[161,"core::result"],[162,"tuxedo_core::types"],[163,"parity_scale_codec::error"],[164,"parity_scale_codec::codec"],[165,"serde::de"],[166,"alloc::vec"],[167,"parity_scale_codec::codec"],[168,"core::cmp"],[169,"core::fmt"],[170,"core::fmt"],[171,"alloc::alloc"],[172,"core::any"],[173,"scale_info::ty"],[174,"core::ops::function"]],"d":["An input data has the wrong type.","An output data has the wrong type.","Errors that can occur when checking PoE Transactions","The effective height of this claim is in the past, So the …","A constraint checker to create claims.","Configuration items for the Proof of Existence piece when …","A constraint checker that resolves claim disputes by …","A constraint checker to revoke claims.","Wrong number of inputs were provided to the constraint …","Wrong number of outputs were provided to the constraint …","","","","","A means of getting the current block height. Probably this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[14,14,0,14,0,0,0,0,14,14,14,4,12,13,9,14,4,12,13,14,4,12,13,4,4,12,12,13,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,4,14,4,12,13,14,4,12,13,14,14,14,4,4,4,12,12,12,13,13,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,14,4,12,13,4,12,13,14,4,12,13,14,4,12,13,4,14,4,12,13],"f":[0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]],[6,[5]],[6,[5]],[6,[5]]],[[8,[7]]],9],[[-1,[6,[[10,[-2]]]],[6,[[10,[-2]]]],[6,[[10,[-2]]]]],[[8,[11]]],[],[]],[[-1,[6,[[10,[-2]]]],[6,[[10,[-2]]]],[6,[[10,[-2]]]]],[[8,[11]]],[],[]],[[12,[6,[5]],[6,[5]],[6,[5]]],[[8,[7]]]],[[-1,[6,[[10,[-2]]]],[6,[[10,[-2]]]],[6,[[10,[-2]]]]],[[8,[11]]],[],[]],[[13,[6,[5]],[6,[5]],[6,[5]]],[[8,[7]]]],[14,14],[[[4,[-1]]],[[4,[-1]]],[]],[12,12],[13,13],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[8,[14,15]]],16],[-1,[[8,[[4,[-2]],15]]],16,[]],[-1,[[8,[12,15]]],16],[-1,[[8,[13,15]]],16],[[[6,[17]]],[[8,[-1,15]]],[]],[[[6,[17]]],[[8,[-1,15]]],[]],[[[6,[17]]],[[8,[-1,15]]],[]],[[[6,[17]]],[[8,[-1,15]]],[]],[[3,[6,[17]]],[[8,[-1,15]]],[]],[[3,[6,[17]]],[[8,[-1,15]]],[]],[[3,[6,[17]]],[[8,[-1,15]]],[]],[[3,[6,[17]]],[[8,[-1,15]]],[]],[[3,-1],[[8,[-2,15]]],16,[]],[[3,-1],[[8,[-2,15]]],16,[]],[[3,-1],[[8,[-2,15]]],16,[]],[[3,-1],[[8,[-2,15]]],16,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[8,[14]]],19],[-1,[[8,[[4,[-2]]]]],19,[]],[-1,[[8,[12]]],19],[-1,[[8,[13]]],19],[18,2],[18,2],[18,2],[18,2],[[[4,[-1]]],[[20,[17]]],[]],[[14,-1],2,[21,22]],[[[4,[-1]],-2],2,[],[21,22]],[[12,-1],2,[21,22]],[[13,-1],2,[21,22]],[[14,14],23],[[[4,[-1]],[4,[-1]]],23,24],[[12,12],23],[[13,13],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[14,25],26],[[[4,[-1]],25],26,[]],[[12,25],26],[[13,25],26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,-1],8,27],[[[4,[-1]],-2],8,[],27],[[12,-1],8,27],[[13,-1],8,27],[14,18],[[[4,[-1]]],18,[]],[12,18],[13,18],[[-1,[6,[17]]],[[20,[17,28]]],[]],[[-1,[6,[17]]],[[20,[17,28]]],[]],[[-1,[6,[17]]],[[20,[17,28]]],[]],[[-1,[6,[17]]],[[20,[17,28]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[[],30],[[],30],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]],-2],-3,[],31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",158],[15,"tuple"],[15,"u32"],[3,"PoeClaim",0],[3,"DynamicallyTypedData",159],[15,"slice"],[6,"TransactionPriority",160],[4,"Result",161],[8,"PoeConfig",0],[3,"Output",162],[15,"u64"],[3,"PoeRevoke",0],[3,"PoeDispute",0],[4,"ConstraintCheckerError",0],[3,"Error",163],[8,"Input",164],[15,"u8"],[15,"usize"],[8,"Deserializer",165],[3,"Vec",166],[8,"Output",164],[8,"Sized",167],[15,"bool"],[8,"PartialEq",168],[3,"Formatter",169],[6,"Result",169],[8,"Serializer",170],[3,"Global",171],[3,"TypeId",172],[3,"Type",173],[8,"FnOnce",174]],"b":[]},\
"runtime_upgrade":{"doc":"This is a small pallet that handles runtime upgrades in …","t":"NNENNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BadlyTypedInput","BadlyTypedOutput","ConstraintCheckerError","InputMismatch","OutputMismatch","RuntimeUpgrade","WrongNumberInputs","WrongNumberOutputs","__clone_box","borrow","borrow","borrow_mut","borrow_mut","check","check","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip"],"q":[[0,"runtime_upgrade"],[64,"dyn_clone::sealed"],[65,"tuxedo_core::dynamic_typing"],[66,"sp_runtime::transaction_validity"],[67,"core::result"],[68,"tuxedo_core::types"],[69,"parity_scale_codec::error"],[70,"parity_scale_codec::codec"],[71,"serde::de"],[72,"alloc::vec"],[73,"parity_scale_codec::codec"],[74,"core::fmt"],[75,"core::fmt"],[76,"alloc::alloc"],[77,"core::any"],[78,"scale_info::ty"],[79,"core::ops::function"]],"d":["An input data has the wrong type.","An output data has the wrong type.","Reasons that the RuntimeUpgrade constraint checker may fail","The consumed input does not match the current wasm. This …","The created output does not match the provided new runtime …","The sole constraint checker for the runtime upgrade. It …","Wrong number of inputs were provided to the constraint …","Wrong number of outputs were provided to the constraint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[20,20,0,20,20,0,20,20,3,20,3,20,3,3,3,3,3,3,3,3,3,20,3,20,3,3,20,3,3,3,3,3,3,3,20,3,20,3,20,3,20,3,20,3,20,3,3,3,3,3,20,3,20,3,20,3,3,20,3,20,3,3,20,3],"f":[0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,[5,[4]],[5,[4]],[5,[4]]],[[7,[6]]]],[[-1,[5,[[8,[-2]]]],[5,[[8,[-2]]]],[5,[[8,[-2]]]]],[[7,[9]]],[],[]],[3,3],[[-1,-2],2,[],[]],[-1,[[7,[3,10]]],11],[[[5,[12]]],[[7,[-1,10]]],[]],[[13,[5,[12]]],[[7,[-1,10]]],[]],[[13,-1],[[7,[-2,10]]],11,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[-1,[[7,[3]]],15],[14,2],[14,2],[3,[[16,[12]]]],[[3,-1],2,[17,18]],[[3,3],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[20,21],22],[[3,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],14],[[],14],[-1,-2,[],[]],[-1,-2,[],[]],[[3,-1],7,23],[3,14],[[-1,[5,[12]]],[[16,[12,24]]],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,-1],-2,27,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",64],[15,"tuple"],[3,"RuntimeUpgrade",0],[3,"DynamicallyTypedData",65],[15,"slice"],[6,"TransactionPriority",66],[4,"Result",67],[3,"Output",68],[15,"u64"],[3,"Error",69],[8,"Input",70],[15,"u8"],[15,"u32"],[15,"usize"],[8,"Deserializer",71],[3,"Vec",72],[8,"Output",70],[8,"Sized",73],[15,"bool"],[4,"ConstraintCheckerError",0],[3,"Formatter",74],[6,"Result",74],[8,"Serializer",75],[3,"Global",76],[3,"TypeId",77],[3,"Type",78],[8,"FnOnce",79]],"b":[]},\
"tuxedo_core":{"doc":"This crate is the core of the Tuxedo runtime framework.","t":"CDCCXLLLLLLALLLAOLOLLLLLLAALLXXLALLALLALIQQIKKADLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDSINLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLMLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLYYYISKNGNNDNNDDNDENLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLDLLLLLLLLLLLLLLLLLLLDDDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLL","n":["ConstraintChecker","Executive","SimpleConstraintChecker","Verifier","aggregate","apply_extrinsic","apply_tuxedo_transaction","block_height","borrow","borrow_mut","close_block","constraint_checker","deref","deref_mut","drop","dynamic_typing","ensure","execute_block","fail","from","from_mut","from_ref","init","into","open_block","support_macros","traits","try_from","try_into","tuxedo_constraint_checker","tuxedo_verifier","type_id","types","unchecked_into","unique_saturated_into","utxo_set","validate_transaction","validate_tuxedo_transaction","verifier","vzip","ConstraintChecker","Error","Error","SimpleConstraintChecker","check","check","testing","TestConstraintChecker","__clone_box","borrow","borrow_mut","check","check","checks","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","deserialize","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_ref","init","into","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip","DecodingFailed","DynamicTypingError","DynamicallyTypedData","TYPE_ID","UtxoData","WrongType","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","data","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","serialize","size_hint","testing","to_keyed_vec","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Bogus","borrow","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_ref","init","into","size_hint","to_keyed_vec","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","CloneNoBound","DebugNoBound","DefaultNoBound","Cash","ID","value","ConstraintCheckerError","DispatchResult","DuplicateInput","Err","Input","MissingInput","Ok","Output","OutputRef","PreExistingOutput","Transaction","UtxoError","VerifierError","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checker","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","index","init","init","init","init","init","inputs","into","into","into","into","into","is_signed","new","output_ref","outputs","payload","peeks","redeemer","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_hash","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verifier","vzip","vzip","vzip","vzip","vzip","TransparentUtxoSet","borrow","borrow_mut","consume_utxo","deref","deref_mut","drop","from","from_mut","from_ref","init","into","peek_utxo","store_utxo","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","SigCheck","SignatureAndIndex","TestVerifier","ThresholdMultiSignature","UpForGrabs","Verifier","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","has_duplicate_signatories","index","init","init","init","init","init","into","into","into","into","into","owner_pubkey","serialize","serialize","serialize","serialize","serialize","signatories","signature","size_hint","size_hint","size_hint","size_hint","size_hint","threshold","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","verifies","verify","verify","verify","verify","verify","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"tuxedo_core"],[40,"tuxedo_core::constraint_checker"],[47,"tuxedo_core::constraint_checker::testing"],[88,"tuxedo_core::dynamic_typing"],[157,"tuxedo_core::dynamic_typing::testing"],[186,"tuxedo_core::support_macros"],[189,"tuxedo_core::traits"],[192,"tuxedo_core::types"],[377,"tuxedo_core::utxo_set"],[397,"tuxedo_core::verifier"],[593,"sp_runtime"],[594,"scale_info"],[595,"sp_runtime::traits"],[596,"core::result"],[597,"core::any"],[598,"sp_runtime::transaction_validity"],[599,"sp_runtime::transaction_validity"],[600,"parity_scale_codec::error"],[601,"parity_scale_codec::codec"],[602,"serde::de"],[603,"alloc::vec"],[604,"parity_scale_codec::codec"],[605,"core::fmt"],[606,"core::fmt"],[607,"alloc::alloc"],[608,"scale_info::ty"],[609,"core::ops::function"],[610,"alloc::string"],[611,"core::clone"],[612,"parity_scale_codec::codec"],[613,"core::fmt"],[614,"serde::ser"]],"d":["","The executive. Each runtime is encouraged to make a type …","","","Automatically implements <code>From</code> for each type in an …","","Does full verification and application of tuxedo …","A helper function that allows tuxedo runtimes to read the …","","","","A constraint checker is a piece of logic that determines …","","","","Dynamic Typing utilities for Tuxedo runtimes","Evaluate <code>$x:expr</code> and if not true return <code>Err($y:expr)</code>.","","Return Err of the expression: <code>return Err($expression);</code>.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","These macros are copied from frame-support. Substrate …","General-purpose runtime traits for describing common types …","","","This macro treats the supplied enum as an aggregate …","This macro treats the supplied enum as an aggregate …","","The common types that will be used across a Tuxedo …","","","For now this is a higher level description of the default …","","Does pool-style validation of a tuxedo transaction. Does …","A verifier is a piece of logic that determines whether an …","","A single constraint checker that a transaction can choose …","The error type that this constraint checker may return","the error type that this constraint checker may return","A simplified constraint checker that a transaction can …","The actual check validation logic","The actual check validation logic","Utilities for writing constraint-checker-related unit tests","A testing checker that passes (with zero priority) or not …","","","","","","Whether the checker should pass.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Although the types matched, the data could not be decoded …","Errors that can occur when casting dynamically typed data …","A piece of encoded data with a type id associated Strongly …","A unique identifier for this type. For now choosing this …","A trait that must be implemented for any data that can be …","The data provided was not of the target decoding type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts strongly typed data from an Output, iff the …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","A bogus data type for use in tests.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Derive [<code>Clone</code>] but do not bound any generic. Docs are at …","Derive [<code>Debug</code>] but do not bound any generics. Docs are at …","derive <code>Default</code> but do no bound any generic. Docs are at …","A trait for UTXOs that can act like coins, or bank notes.","A 1-byte unique identifier for this coin. Might need more …","Get the value of this token.","The constraint checker errored.","The Result of dispatching a UTXO transaction.","This transaction defines the same input multiple times","Contains the error value","A reference the a utxo that will be consumed along with …","One or more of the inputs required by this transaction is …","Contains the success value","An opaque piece of Transaction output data. This is how …","A reference to a output that is expected to exist in the …","This transaction defines an output that already existed in …","A UTXO Transaction","","The Verifier errored. TODO determine whether it is useful …","","","","","","","","","","","","","","","Which piece of constraint checking logic is used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","The index of this output among all outputs created by the …","","","","","","Existing pieces of state to be read and consumed from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","a reference to the output being consumed","New state to be placed into storage","","Existing state to be read, but not consumed, from storage","","","","","","","","","","","","","","","","","","","","","","","","","","","A hash of the transaction that created this output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume a Utxo from the set.","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","Fetch a utxo from the set.","Add a utxo into the set. This will overwrite any utxo that …","","","","","","","A typical verifier that checks an sr25519 signature","Combination of a signature plus and index so that the …","A testing verifier that passes or depending on the enclosed","A Threshold multisignature. Some number of member …","A simple verifier that allows anyone to consume an output …","A means of checking that an output can be verified (aka …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","The index of this signer in the signatory vector","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","All the member signatories, some (or all depending on the …","The signature of the signer","","","","","","The minimum number of valid signatures needed to consume …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the verifier should pass","","","","","","","","","",""],"i":[0,0,0,0,0,58,58,58,58,58,58,0,58,58,58,0,0,58,0,58,58,58,58,58,58,0,0,58,58,0,0,58,0,58,58,0,58,58,0,58,0,59,6,0,59,6,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,38,0,0,39,0,38,16,16,38,16,38,16,16,16,16,16,16,16,16,38,16,38,16,16,38,16,16,38,16,16,16,38,38,38,16,16,38,38,16,16,38,16,38,16,38,16,38,16,38,16,16,0,16,16,38,16,38,16,38,16,38,16,16,16,38,16,38,16,38,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,60,60,15,0,15,3,0,15,3,0,0,15,0,0,15,43,2,45,19,43,2,45,15,19,43,2,45,15,19,2,43,2,45,19,43,2,45,19,43,2,45,19,43,2,45,19,43,2,45,19,43,2,45,19,43,2,45,15,19,43,2,45,15,19,43,2,45,19,43,2,45,15,19,43,2,45,19,43,2,45,15,19,43,43,43,2,2,2,45,45,45,15,15,15,19,19,19,43,2,45,15,19,43,2,45,15,19,43,2,45,15,19,43,2,45,15,19,43,43,2,45,15,19,2,43,2,45,15,19,2,2,45,2,19,2,45,43,2,45,19,43,45,19,43,2,45,19,43,2,45,19,43,2,45,15,19,43,2,45,15,19,43,43,2,45,15,19,43,2,45,19,43,2,45,15,19,43,2,45,15,19,19,43,2,45,15,19,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,0,0,0,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,57,53,54,55,56,57,53,54,55,56,57,53,53,53,54,54,54,55,55,55,56,56,56,57,57,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,55,56,53,54,55,56,57,53,54,55,56,57,53,53,54,55,56,57,55,56,53,54,55,56,57,55,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,56,57,53,54,55,57,53,54,55,56,57,53,54,55,56,57,53,57,57,4,53,54,55,57,53,54,55,56,57],"f":[0,0,0,0,0,[[],1],[[[2,[-1,-2]]],3,[4,5],[[6,[-1]],5]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],0,[7,-1,[]],[7,-1,[]],[7,8],0,0,[-1,8,9],0,[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[[],8],0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[12,13],[[[2,[-1,-2]]],[[10,[14,15]]],[4,5],[[6,[-1]],5]],0,[-1,-2,[],[]],0,0,0,0,[[-1,[17,[16]],[17,[16]],[17,[16]]],[[10,[18]]],[]],[[-1,[17,[[19,[-2]]]],[17,[[19,[-2]]]],[17,[[19,[-2]]]]],[[10,[18]]],[],[]],0,0,[[-1,20],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[21,[17,[16]],[17,[16]],[17,[16]]],[[10,[18,8]]]],[[-1,[17,[[19,[-2]]]],[17,[[19,[-2]]]],[17,[[19,[-2]]]]],[[10,[22]]],[],[]],0,[21,21],[[-1,-2],8,[],[]],[-1,[[10,[21,23]]],24],[[[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,-1],[[10,[-2,23]]],24,[]],[7,-1,[]],[7,-1,[]],[-1,[[10,[21]]],27],[7,8],[21,[[28,[25]]]],[[21,-1],8,[29,30]],[[21,21],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[21,32],33],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[[21,-1],10,34],[21,7],[[-1,[17,[25]]],[[28,[25,35]]],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[[21,-1],-2,37,[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,20],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[[-1,-2],8,[],[]],0,[-1,[[10,[16,23]]],24],[[[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,-1],[[10,[-2,23]]],24,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[10,[16]]],27],[7,8],[7,8],[[16,-1],8,[29,30]],[[16,16],31],[[38,38],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[16,[[10,[-1,38]]],39],[[16,32],33],[[38,32],33],[[38,32],33],[-1,-1,[]],[-1,16,39],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[16,-1],10,34],[16,7],0,[[-1,[17,[25]]],[[28,[25,35]]],[]],[-1,-2,[],[]],[-1,40,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[41,23]]],24],[[[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,-1],[[10,[-2,23]]],24,[]],[7,-1,[]],[7,-1,[]],[7,8],[[41,-1],8,[29,30]],[[41,41],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[41,32],33],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[41,7],[[-1,[17,[25]]],[[28,[25,35]]],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,42,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,20],8,[]],[[-1,20],8,[]],[[-1,20],8,[]],[[-1,20],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[43,43],[[[2,[-1,-2]]],[[2,[-1,-2]]],[44,5],[44,5]],[45,45],[[[19,[-1]]],[[19,[-1]]],44],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,[[10,[43,23]]],24],[-1,[[10,[[2,[-2,-3]],23]]],24,[46,5],[46,5]],[-1,[[10,[45,23]]],24],[-1,[[10,[[19,[-2]],23]]],24,46],[[[17,[25]]],[[10,[-1,23]]],[]],[[[17,[25]]],[[10,[-1,23]]],[]],[[[17,[25]]],[[10,[-1,23]]],[]],[[[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,-1],[[10,[-2,23]]],24,[]],[[26,-1],[[10,[-2,23]]],24,[]],[[26,-1],[[10,[-2,23]]],24,[]],[[26,-1],[[10,[-2,23]]],24,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[10,[43]]],27],[-1,[[10,[[2,[-2,-3]]]]],27,[47,5],[47,5]],[-1,[[10,[45]]],27],[-1,[[10,[[19,[-2]]]]],27,47],[7,8],[7,8],[7,8],[7,8],[7,8],[[43,-1],8,[29,30]],[[[2,[-1,-2]],-3],8,[48,5],[48,5],[29,30]],[[45,-1],8,[29,30]],[[[19,[-1]],-2],8,48,[29,30]],[[43,43],31],[[[2,[-1,-2]],[2,[-1,-2]]],31,[49,5],[49,5]],[[45,45],31],[[[15,[-1]],[15,[-1]]],31,49],[[[19,[-1]],[19,[-1]]],31,49],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[43,32],33],[[[2,[-1,-2]],32],33,[50,5],[50,5]],[[45,32],33],[[[15,[-1]],32],33,50],[[[19,[-1]],32],33,50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1,-2]]],[[51,[31]]],5,5],[[[2,[-1,-2]],51],[[51,[[2,[-1,-2]]]]],5,5],0,0,0,0,0,[[43,-1],10,34],[[[2,[-1,-2]],-3],10,[52,5],[52,5],34],[[45,-1],10,34],[[[19,[-1]],-2],10,52,34],[43,7],[45,7],[[[19,[-1]]],7,48],[[-1,[17,[25]]],[[28,[25,35]]],[]],[[-1,[17,[25]]],[[28,[25,35]]],[]],[[-1,[17,[25]]],[[28,[25,35]]],[]],[[-1,[17,[25]]],[[28,[25,35]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[],36],[[],36],[[],36],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[43,[[51,[[19,[-1]]]]],4],[7,-1,[]],[7,-1,[]],[7,8],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[43,[[51,[[19,[-1]]]]],4],[[43,[19,[-1]]],8,4],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,20],8,[]],[[-1,20],8,[]],[[-1,20],8,[]],[[-1,20],8,[]],[[-1,20],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,53],[54,54],[55,55],[56,56],[57,57],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,[[10,[53,23]]],24],[-1,[[10,[54,23]]],24],[-1,[[10,[55,23]]],24],[-1,[[10,[56,23]]],24],[-1,[[10,[57,23]]],24],[[[17,[25]]],[[10,[-1,23]]],[]],[[[17,[25]]],[[10,[-1,23]]],[]],[[[17,[25]]],[[10,[-1,23]]],[]],[[[17,[25]]],[[10,[-1,23]]],[]],[[[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,[17,[25]]],[[10,[-1,23]]],[]],[[26,-1],[[10,[-2,23]]],24,[]],[[26,-1],[[10,[-2,23]]],24,[]],[[26,-1],[[10,[-2,23]]],24,[]],[[26,-1],[[10,[-2,23]]],24,[]],[[26,-1],[[10,[-2,23]]],24,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[10,[53]]],27],[-1,[[10,[54]]],27],[-1,[[10,[55]]],27],[-1,[[10,[56]]],27],[-1,[[10,[57]]],27],[7,8],[7,8],[7,8],[7,8],[7,8],[53,[[28,[25]]]],[57,[[28,[25]]]],[[53,-1],8,[29,30]],[[54,-1],8,[29,30]],[[55,-1],8,[29,30]],[[56,-1],8,[29,30]],[[57,-1],8,[29,30]],[[53,53],31],[[54,54],31],[[55,55],31],[[56,56],31],[[57,57],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[53,32],33],[[54,32],33],[[55,32],33],[[56,32],33],[[57,32],33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,31],0,[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[53,-1],10,34],[[54,-1],10,34],[[55,-1],10,34],[[56,-1],10,34],[[57,-1],10,34],0,0,[53,7],[54,7],[55,7],[56,7],[57,7],0,[[-1,[17,[25]]],[[28,[25,35]]],[]],[[-1,[17,[25]]],[[28,[25,35]]],[]],[[-1,[17,[25]]],[[28,[25,35]]],[]],[[-1,[17,[25]]],[[28,[25,35]]],[]],[[-1,[17,[25]]],[[28,[25,35]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[],36],[[],36],[[],36],[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[53,-1],-2,37,[]],[[57,-1],-2,37,[]],0,[[-1,[17,[25]],[17,[25]]],31,[]],[[53,[17,[25]],[17,[25]]],31],[[54,[17,[25]],[17,[25]]],31],[[55,[17,[25]],[17,[25]]],31],[[57,[17,[25]],[17,[25]]],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[6,"ApplyExtrinsicResult",593],[3,"Transaction",192],[6,"DispatchResult",192],[8,"Verifier",397],[8,"TypeInfo",594],[8,"ConstraintChecker",40],[15,"usize"],[15,"tuple"],[8,"Block",595],[4,"Result",596],[3,"TypeId",597],[4,"TransactionSource",598],[6,"TransactionValidity",598],[3,"ValidTransaction",598],[4,"UtxoError",192],[3,"DynamicallyTypedData",88],[15,"slice"],[6,"TransactionPriority",598],[3,"Output",192],[3,"Private",599],[3,"TestConstraintChecker",47],[15,"u64"],[3,"Error",600],[8,"Input",601],[15,"u8"],[15,"u32"],[8,"Deserializer",602],[3,"Vec",603],[8,"Output",601],[8,"Sized",604],[15,"bool"],[3,"Formatter",605],[6,"Result",605],[8,"Serializer",606],[3,"Global",607],[3,"Type",608],[8,"FnOnce",609],[4,"DynamicTypingError",88],[8,"UtxoData",88],[3,"String",610],[3,"Bogus",157],[15,"u128"],[3,"OutputRef",192],[8,"Clone",611],[3,"Input",192],[8,"Decode",601],[8,"Deserialize",602],[8,"Encode",601],[8,"PartialEq",612],[8,"Debug",605],[4,"Option",613],[8,"Serialize",606],[3,"SigCheck",397],[3,"UpForGrabs",397],[3,"ThresholdMultiSignature",397],[3,"SignatureAndIndex",397],[3,"TestVerifier",397],[3,"Executive",0],[8,"SimpleConstraintChecker",40],[8,"Cash",189],[3,"TransparentUtxoSet",377]],"b":[[124,"impl-Display-for-DynamicTypingError"],[125,"impl-Debug-for-DynamicTypingError"]]},\
"tuxedo_template_runtime":{"doc":"The Tuxedo Template Runtime is an example runtime that uses","t":"NNNNNNGGGNNDGNNEEEGNNNNNNDDDNNNNGNRRRLLLCALLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLMLLLLLLLLCLLLCFMAMMMMCLLLCLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFDGDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AmoebaCreation","AmoebaCreation","AmoebaDeath","AmoebaDeath","AmoebaMitosis","AmoebaMitosis","Block","BlockNumber","Executive","FreeKittyConstraintChecker","FreeKittyConstraintChecker","GenesisConfig","Header","Money","Money","OuterConstraintChecker","OuterConstraintCheckerError","OuterVerifier","Output","PoeClaim","PoeClaim","PoeDispute","PoeDispute","PoeRevoke","PoeRevoke","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeUpgrade","RuntimeUpgrade","SigCheck","ThresholdMultiSignature","Transaction","UpForGrabs","VERSION","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","amoeba","api","api_version","apply_extrinsic","assimilate_storage","authorities","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check_inherents","checker","clone","clone","clone","clone_into","clone_into","clone_into","construct_runtime_api","current_set_id","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","digest","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","extract_proof","extrinsics","extrinsics_root","finalize_block","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_key_ownership_proof","generate_session_keys","genesis_utxos","grandpa_authorities","has_api","has_api_with","header","inherent_extrinsics","init","init","init","init","init","init","init","initialize_block","inputs","into","into","into","into","into","into","into","into_storage_changes","kitties","metadata","metadata_at_version","metadata_versions","money","native_version","number","opaque","outputs","parent_hash","payload","peeks","poe","proof_recorder","record_proof","register_extension","runtime_upgrade","serialize","serialize","serialize","set_call_context","size_hint","size_hint","size_hint","slot_duration","state_root","submit_report_equivocation_unsigned_extrinsic","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_transaction","verifier","verify","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","dispatch","AuraAppPublic","Block","GrandpaAppPublic","SessionKeys","__clone_box","aura","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","extrinsics","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","generate","get_raw","grandpa","header","init","init","init","into","into","into","into_raw_public_keys","key_ids","serialize","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"tuxedo_template_runtime"],[275,"tuxedo_template_runtime::api"],[276,"tuxedo_template_runtime::opaque"],[356,"dyn_clone::sealed"],[357,"core::option"],[358,"sp_api"],[359,"core::result"],[360,"sp_runtime::traits"],[361,"sp_api"],[362,"sp_storage"],[363,"alloc::string"],[364,"sp_consensus_aura::sr25519"],[365,"alloc::vec"],[366,"tuxedo_core::types"],[367,"sp_runtime::transaction_validity"],[368,"sp_inherents"],[369,"sp_inherents"],[370,"parity_scale_codec::error"],[371,"parity_scale_codec::codec"],[372,"sp_core::crypto"],[373,"serde::de"],[374,"parity_scale_codec::codec"],[375,"core::ops::function"],[376,"sp_trie::storage_proof"],[377,"core::fmt"],[378,"core::fmt"],[379,"tuxedo_core::verifier"],[380,"kitties"],[381,"runtime_upgrade"],[382,"poe"],[383,"poe"],[384,"amoeba"],[385,"sp_core"],[386,"sp_version"],[387,"sp_api"],[388,"serde::ser"],[389,"sp_core::traits"],[390,"sp_consensus_slots"],[391,"sp_runtime::traits"],[392,"core::any"],[393,"scale_info::ty"],[394,"sp_runtime::transaction_validity"]],"d":["Checks that a single amoeba is simply created from the void…","","Checks that a single amoeba is simply removed from the …","","Checks that an amoeba can split into two new amoebas","","","","","Checks Free Kitty transactions","","","","Checks monetary transactions in a basic fungible …","","A constraint checker is a piece of logic that can be used …","This type is generated by the <code>#[tuxedo_constraint_checker]</code> …","A verifier checks that an individual input can be …","","Checks that new valid proofs of existence are claimed","","Checks that one winning claim came earlier than all the …","","Checks that proofs of existence are revoked.","","The main struct in this module.","","Implements all runtime apis for the client side.","Upgrade the Wasm Runtime","","","","","","This runtime version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which piece of constraint checking logic is used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","","","","","","","","","","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","The block header.","","","","","","","","","","Existing pieces of state to be read and consumed from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The version information used to identify this runtime when …","The block number.","Opaque types. These are used by the CLI to instantiate …","New state to be placed into storage","The parent hash.","","Existing state to be read, but not consumed, from storage","","","","","","","","","","","","","","The state trie merkle root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque block type.","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","","","","","","","","The accompanying extrinsics.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Generate a set of keys with optionally using the given …","","","The block header.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[16,40,16,40,16,40,0,0,0,16,40,0,0,16,40,0,0,0,0,16,40,16,40,16,40,0,0,0,16,40,17,17,0,17,0,0,0,17,16,24,0,0,3,24,11,24,24,11,17,16,40,24,77,3,11,17,16,40,24,77,3,16,24,78,17,16,24,17,16,24,77,24,17,16,24,17,16,24,17,16,24,24,17,16,24,11,11,17,16,40,24,77,3,11,17,16,40,24,77,3,11,17,16,79,11,17,16,40,24,77,3,17,16,24,17,16,24,17,17,17,16,16,16,24,24,24,24,3,3,21,79,24,17,16,40,11,17,17,17,17,16,16,16,16,16,16,16,16,16,16,40,24,77,3,11,17,16,40,24,77,3,11,17,16,40,24,77,3,24,24,11,24,3,3,21,24,11,17,16,40,24,77,3,24,78,11,17,16,40,24,77,3,3,0,24,24,24,0,0,79,0,78,79,80,78,0,3,3,3,0,11,17,16,3,17,16,24,24,79,24,17,16,24,17,16,24,11,17,16,40,24,77,3,11,17,16,40,24,77,3,11,17,16,40,24,77,3,17,16,24,11,17,16,40,24,77,3,11,17,16,40,24,77,3,24,80,17,24,11,17,16,40,24,77,3,0,0,0,0,0,76,76,81,82,76,81,82,76,76,76,76,76,76,76,76,81,82,76,81,82,76,76,81,82,76,76,76,76,76,76,83,76,81,82,76,81,82,76,81,82,76,76,76,76,83,81,82,76,81,82,76,76,76,76,76,76,76,81,82,76,81,82,76,81,82,76,76,81,82,76,81,82,76,81,82,76],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,[[[3,[-1,-2]]],[[7,[[5,[4]],6]]],8,[[9,[-1]]]],[[],10],[[11,12],[[7,[2,13]]]],[[],[[15,[14]]]],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,[19,[[18,[17]]]],[19,[[18,[17]]]],[19,[[18,[17]]]]],[[7,[20]]]],[[21,22],23],0,[17,17],[16,16],[24,24],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-2,25,8,[[9,[-1]]]],[[],26],[-1,[[7,[17,27]]],28],[-1,[[7,[16,27]]],28],[-1,[[7,[24,27]]],28],[[[19,[29]]],[[7,[-1,27]]],[]],[[[19,[29]]],[[7,[-1,27]]],[]],[[[19,[29]]],[[7,[-1,27]]],[]],[[4,[19,[29]]],[[7,[-1,27]]],[]],[[4,[19,[29]]],[[7,[-1,27]]],[]],[[4,[19,[29]]],[[7,[-1,27]]],[]],[[[15,[29]]],[[5,[[15,[[2,[[15,[29]],30]]]]]]]],[[4,-1],[[7,[-2,27]]],28,[]],[[4,-1],[[7,[-2,27]]],28,[]],[[4,-1],[[7,[-2,27]]],28,[]],[[],11],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[-1,[[7,[11]]],32],[-1,[[7,[17]]],32],[-1,[[7,[16]]],32],0,[31,2],[31,2],[31,2],[31,2],[31,2],[31,2],[31,2],[[17,-1],2,[33,34]],[[16,-1],2,[33,34]],[[24,-1],2,[33,34]],[[17,17],35],[[16,16],35],[[24,24],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[21,2],[[[3,[-1,-2]],-3],-4,8,[[9,[-1]]],36,[]],[[[3,[-1,-2]]],[[5,[37]]],8,[[9,[-1]]]],0,0,[[]],[[17,38],39],[[16,38],39],[[40,38],39],[-1,-1,[]],[41,17],[42,17],[43,17],[-1,-1,[]],[44,16],[45,16],[46,16],[[[47,[24]]],16],[48,16],[49,16],[50,16],[51,16],[-1,-1,[]],[52,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,53],[[5,[54]]]],[[[5,[[15,[29]]]]],[[15,[29]]]],0,[[],55],[[[3,[-1,-2]]],[[7,[35,6]]],8,[[9,[-1]]]],[[[3,[-1,-2]],-3],[[7,[35,6]]],8,[[9,[-1]]],56],0,[22,15],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]],-3],[[7,[[57,[-1]],13]]],8,[[9,[-1]]],[[59,[[58,[-1]]]]]],0,[[],60],[4,[[5,[60]]]],[[],[[15,[4]]]],0,[[],61],0,0,0,0,0,0,0,[[[3,[-1,-2]]],[[5,[[62,[-1]]]]],8,[[9,[-1]]]],[[[3,[-1,-2]]],2,8,[[9,[-1]]]],[[[3,[-1,-2]],-3],2,8,[[9,[-1]]],63],0,[[11,-1],7,64],[[17,-1],7,64],[[16,-1],7,64],[[[3,[-1,-2]],65],2,8,[[9,[-1]]]],[17,31],[16,31],[24,31],[[],66],0,[[[68,[[67,[21]]]],54],[[5,[2]]]],[[-1,[19,[29]]],[[15,[29,69]]],[]],[[-1,[19,[29]]],[[15,[29,69]]],[]],[[-1,[19,[29]]],[[15,[29,69]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[[],71],[[],71],[[],71],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,73],0,[[17,[19,[29]],[19,[29]]],35],[[],74],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[75,[19,[29]]],[[5,[[15,[29]]]]]],0,0,0,0,[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[[-1,-2],2,[],[]],[-1,[[7,[76,27]]],28],[[[19,[29]]],[[7,[-1,27]]],[]],[[4,[19,[29]]],[[7,[-1,27]]],[]],[[[19,[29]]],[[5,[[15,[[2,[[15,[29]],30]]]]]]]],[[4,-1],[[7,[-2,27]]],28,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[31,-1,[]],[-1,[[7,[76]]],32],[31,2],[31,2],[31,2],[[76,-1],2,[33,34]],[[76,76],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[76,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[[15,[29]]]]],[[15,[29]]]],[[76,30],[[19,[29]]]],0,0,[[],31],[[],31],[[],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,[[15,[[2,[[15,[29]],30]]]]]],[[],[[19,[30]]]],[[76,-1],7,64],[76,31],[[-1,[19,[29]]],[[15,[29,69]]],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[[],71],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",356],[15,"tuple"],[3,"RuntimeApiImpl",0],[15,"u32"],[4,"Option",357],[4,"ApiError",358],[4,"Result",359],[8,"Block",360],[8,"CallApiAt",358],[6,"ApplyExtrinsicResult",361],[3,"GenesisConfig",0],[3,"Storage",362],[3,"String",363],[6,"AuthorityId",364],[3,"Vec",365],[4,"OuterConstraintChecker",0],[4,"OuterVerifier",0],[3,"Output",366],[15,"slice"],[6,"TransactionPriority",367],[6,"Block",0],[3,"InherentData",368],[3,"CheckInherentsResult",368],[3,"Runtime",0],[3,"ApiRef",358],[6,"SetId",369],[3,"Error",370],[8,"Input",371],[15,"u8"],[3,"KeyTypeId",372],[15,"usize"],[8,"Deserializer",373],[8,"Output",371],[8,"Sized",374],[15,"bool"],[8,"FnOnce",375],[3,"StorageProof",376],[3,"Formatter",377],[6,"Result",377],[4,"OuterConstraintCheckerError",0],[3,"ThresholdMultiSignature",378],[3,"UpForGrabs",378],[3,"SigCheck",378],[3,"AmoebaMitosis",379],[3,"FreeKittyConstraintChecker",380],[3,"RuntimeUpgrade",381],[3,"PoeClaim",382],[3,"PoeRevoke",382],[3,"PoeDispute",382],[4,"MoneyConstraintChecker",383],[3,"AmoebaCreation",379],[3,"AmoebaDeath",379],[6,"AuthorityId",369],[3,"OpaqueKeyOwnershipProof",369],[6,"AuthorityList",369],[8,"Fn",375],[6,"StorageChanges",358],[6,"HashingFor",360],[8,"Backend",384],[3,"OpaqueMetadata",385],[3,"NativeVersion",386],[6,"ProofRecorder",358],[8,"Extension",387],[8,"Serializer",388],[4,"CallContext",389],[3,"SlotDuration",390],[6,"NumberFor",360],[3,"EquivocationProof",369],[3,"Global",391],[3,"TypeId",392],[3,"Type",393],[4,"TransactionSource",367],[6,"TransactionValidity",367],[3,"RuntimeVersion",386],[15,"str"],[3,"SessionKeys",276],[3,"RuntimeApi",0],[6,"Transaction",0],[6,"Header",0],[6,"Output",0],[3,"AuraAppPublic",276],[3,"GrandpaAppPublic",276],[6,"Block",276]],"b":[[136,"impl-From%3CThresholdMultiSignature%3E-for-OuterVerifier"],[137,"impl-From%3CUpForGrabs%3E-for-OuterVerifier"],[138,"impl-From%3CSigCheck%3E-for-OuterVerifier"],[140,"impl-From%3CAmoebaMitosis%3E-for-OuterConstraintChecker"],[141,"impl-From%3CFreeKittyConstraintChecker%3E-for-OuterConstraintChecker"],[142,"impl-From%3CRuntimeUpgrade%3E-for-OuterConstraintChecker"],[143,"impl-From%3CPoeClaim%3CRuntime%3E%3E-for-OuterConstraintChecker"],[144,"impl-From%3CPoeRevoke%3E-for-OuterConstraintChecker"],[145,"impl-From%3CPoeDispute%3E-for-OuterConstraintChecker"],[146,"impl-From%3CMoneyConstraintChecker%3C0%3E%3E-for-OuterConstraintChecker"],[147,"impl-From%3CAmoebaCreation%3E-for-OuterConstraintChecker"],[149,"impl-From%3CAmoebaDeath%3E-for-OuterConstraintChecker"]]},\
"tuxedo_template_wallet":{"doc":"A simple CLI wallet. For now it is a toy just to start …","t":"RAAFFFAFAAFFAFAFNDENNNNNNDNNLLLLLLLLLLLLLMLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMRRRFFFFFFFFFGQIGDGLLKLLLLLLLLLALLLLLLDLLLLLLLLLLLLLLLLLFFRRRRRFFFFFFFFFFFFFFFFFFF","n":["DEFAULT_ENDPOINT","amoeba","cli","default_data_path","fetch_storage","h256_from_string","keystore","main","money","output_filter","output_ref_from_string","pretty_print_verifier","rpc","strip_0x_prefix","sync","amoeba_demo","AmoebaDemo","Cli","Command","GenerateKey","InsertKey","RemoveKey","ShowAllOutputs","ShowBalance","ShowKeys","SpendArgs","SpendCoins","VerifyCoin","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","data_path","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","endpoint","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","group_id","group_id","has_subcommand","init","init","init","input","into","into","into","no_sync","output_amount","recipient","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","output_ref","password","pub_key","seed","KEY_TYPE","SHAWN_PHRASE","SHAWN_PUB_KEY","generate_key","get_keys","has_key","insert_default_key_for_this_session","insert_key","remove_key","sign_with","get_coin_from_storage","spend_coins","Filter","Filter","OutputFilter","OutputInfo","SigCheckFilter","TxHash","borrow","borrow_mut","build_filter","build_filter","deref","deref_mut","drop","from","from_mut","from_ref","init","into","tests","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","TestSigCheckFilter","borrow","borrow_mut","build_filter","deref","deref_mut","drop","from","from_mut","from_ref","init","into","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","node_get_block","node_get_block_hash","BLOCKS","BLOCK_HASHES","NUM_GENESIS_UTXOS","SPENT","UNSPENT","add_unspent_output","apply_block","apply_transaction","get_arbitrary_unspent_set","get_balances","get_block","get_block_hash","get_unspent","height","init_from_genesis","open_db","print_block_hashes_tree","print_unspent_tree","remove_unspent_output","spend_output","synchronize","unapply_highest_block","unapply_transaction","unspend_output"],"q":[[0,"tuxedo_template_wallet"],[15,"tuxedo_template_wallet::amoeba"],[16,"tuxedo_template_wallet::cli"],[109,"tuxedo_template_wallet::cli::Command"],[113,"tuxedo_template_wallet::keystore"],[123,"tuxedo_template_wallet::money"],[125,"tuxedo_template_wallet::output_filter"],[150,"tuxedo_template_wallet::output_filter::tests"],[168,"tuxedo_template_wallet::rpc"],[170,"tuxedo_template_wallet::sync"],[194,"std::path"],[195,"tuxedo_core::types"],[196,"jsonrpsee_http_client::client"],[197,"tuxedo_core::types"],[198,"tuxedo_core::verifier"],[199,"primitive_types"],[200,"clap_builder"],[201,"core::result"],[202,"tuxedo_template_runtime"],[203,"clap_builder::builder::command"],[204,"core::fmt"],[205,"core::fmt"],[206,"clap_builder::util::id"],[207,"core::option"],[208,"core::any"],[209,"sc_keystore::local"],[210,"alloc::string"],[211,"core::iter::traits::iterator"],[212,"std::path"],[213,"alloc::vec"],[214,"money"],[215,"sled::db"],[216,"tuxedo_template_runtime"],[217,"tuxedo_template_runtime"]],"d":["The default RPC endpoint for the wallet to connect to","Toy off-chain process to create an amoeba and perform …","Tuxedo Template Wallet’s Command Line Interface.","Generate the platform-specific default data path for the …","Fetch an output from chain storage given an OutputRef","Parse a string into an H256 that represents a public key","Wallet’s local keystore.","","Wallet features related to spending money and checking …","","Parse an output ref from a string","Utility to pretty print an outer verifier","Strongly typed helper functions for communicating with the …","Takes a string and checks for a 0x prefix. Returns a …","This module is responsible for maintaining the wallet’s …","","Demonstrate creating an amoeba and performing mitosis on …","The wallet’s main CLI struct","The tasks supported by the wallet","Generate a private key using either some or no password …","Insert a private key into the keystore to later use when …","Remove a specific key from the keystore. WARNING! This …","Show the complete list of UTXOs known to the wallet.","For each key tracked by the wallet, shows the sum of all …","Show public information about all the keys in the keystore.","","Spend some coins.","Verify that a particular coin exists.","","","","","","","","","","","","","","","","Path where the wallet data is stored. Wallet data is just …","","","","","","","","","","RPC endpoint of the node that this wallet will connect to","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","An input to be consumed by this transaction. This argument …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Skip the initial sync that the wallet typically performs …","An output amount. For the transaction to be valid, the …","Hex encoded address (sr25519 pubkey) of the recipient","","","","","","","","","","","","","","","","","","","","","","","","","A hex-encoded output reference","Initialize a public/private key pair with a password","The public key to remove","Seed phrase of the key to insert.","A KeyTypeId to use in the keystore for Tuxedo …","A default seed phrase for signing inputs when none is …","The public key corresponding to the default seed above.","Generate a new key from system entropy and insert it into …","","Check whether a specific key is in the keystore","Insert the example “Shawn” key into the keystore for …","Insert the private key associated with the given seed into …","Caution. Removes key from keystore. Call with care.","Sign a given message with the private key that corresponds …","Given an output ref, fetch the details about this coin …","Create and send a transaction that spends coins on the …","The Filter type which is the closure signature used by …","The Filter type which is the closure signature used by …","","","","","","","Builds a filter to be passed to wallet sync functions to …","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","Typed helper to get the node’s full block at a …","Typed helper to get the Node’s block hash at a …","The identifier for the blocks tree in the db.","The identifier for the block_hashes tree in the db.","TODO remove this constant. Instead we should just iterate …","The identifier for the spent tree in the db.","The identifier for the unspent tree in the db.","Add a new output to the database updating all tables.","Apply a block to the local database","Apply a single transaction to the local database The …","Picks an arbitrary set of unspent outputs from the …","Iterate the entire unspent set summing the values of the …","Gets the block from the local database given a block hash. …","Gets the block hash from the local database given a block …","Gets the owner and amount associated with an output ref …","Get the block height that the wallet is currently synced to","","Open a database at the given location intended for the …","Debugging use. Print out the entire block_hashes tree.","Debugging use. Print the entire unspent outputs tree.","Remove an output from the database updating all tables.","Mark an existing output as spent. This does not purge all …","Synchronize the local database to the database of the …","Unapply the best block that the wallet currently knows …","Run a transaction backwards against a database. Mark all …","Mark an output that was previously spent back as unspent."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,18,18,18,18,18,18,0,18,18,15,19,15,19,18,18,15,18,19,15,18,19,15,15,15,15,15,18,19,15,18,19,15,18,19,15,15,18,19,15,18,19,15,18,19,15,18,19,15,18,19,15,18,19,15,19,18,15,18,19,19,15,18,19,15,19,19,15,18,19,15,18,19,15,18,19,15,18,19,15,18,19,15,18,19,15,18,19,15,18,19,40,41,42,43,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,45,45,44,45,45,45,45,45,45,45,45,45,0,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,[[],1],[[2,3],[[5,[[4,[-1]]]]],6],[7,[[5,[8]]]],0,[[],[[5,[9]]]],0,0,[7,[[11,[2,10]]]],[12,9],0,[7,7],0,[3,[[5,[9]]]],0,0,0,0,0,0,0,0,0,0,0,0,[13,13],[13,13],[13,13],[13,13],[13,13],[13,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],0,[[],13],0,[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,9],[14,9],[14,9],0,[[15,16],17],[[18,16],17],[[19,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,[[11,[15,10]]]],[20,[[11,[18,10]]]],[20,[[11,[19,10]]]],[20,[[11,[15,10]]]],[20,[[11,[18,10]]]],[20,[[11,[19,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[22,[21]]]],[[],[[22,[21]]]],[7,23],[[],14],[[],14],[[],14],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,20],[[11,[9,10]]]],[[18,20],[[11,[9,10]]]],[[19,20],[[11,[9,10]]]],[[15,20],[[11,[9,10]]]],[[18,20],[[11,[9,10]]]],[[19,20],[[11,[9,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[25,[22,[26]]],[[5,[9]]]],[25,[[5,[[0,[27]]]]]],[[25,8],23],[25,[[5,[9]]]],[[25,7],[[5,[9]]]],[[28,8],[[5,[9]]]],[[25,29,[31,[30]]],[[5,[[32,[30]]]]]],[[2,3],[[5,[[9,[33,12]]]]]],[[34,3,25,19],[[5,[9]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[12],[12],[14,-1,[]],[14,-1,[]],[14,9],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],14],[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[12],[14,-1,[]],[14,-1,[]],[14,9],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],14],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[8,3],[[5,[[22,[35]]]]]],[[36,3],[[5,[[22,[8]]]]]],0,0,0,0,0,[[34,2,8,37],[[5,[9]]]],[[34,35,8,-1],[[5,[9]]],38],[[34,39,-1],[[5,[9]]],38],[[34,37],[[5,[[22,[[32,[2]]]]]]]],[34,[[5,[[0,[27]]]]]],[[34,8],[[5,[[22,[35]]]]]],[[34,36],[[5,[[22,[8]]]]]],[[34,2],[[5,[[22,[[9,[8,37]]]]]]]],[34,[[5,[[22,[36]]]]]],[[34,3,-1],[[5,[9]]],38],[[1,8,35],[[5,[34]]]],[34,[[5,[9]]]],[34,[[5,[9]]]],[[34,2],[[5,[9]]]],[[34,2],[[5,[9]]]],[[34,3,-1],[[5,[9]]],38],[34,[[5,[35]]]],[[34,39],[[5,[9]]]],[[34,2],[[5,[9]]]]],"c":[],"p":[[3,"PathBuf",194],[3,"OutputRef",195],[3,"HttpClient",196],[3,"Output",195],[6,"Result",197],[8,"Verifier",198],[15,"str"],[3,"H256",199],[15,"tuple"],[6,"Error",200],[4,"Result",201],[4,"OuterVerifier",202],[3,"Command",203],[15,"usize"],[3,"Cli",16],[3,"Formatter",204],[6,"Result",204],[4,"Command",16],[3,"SpendArgs",16],[3,"ArgMatches",205],[3,"Id",206],[4,"Option",207],[15,"bool"],[3,"TypeId",208],[3,"LocalKeystore",209],[3,"String",210],[8,"Iterator",211],[3,"Path",194],[3,"Public",212],[15,"u8"],[15,"slice"],[3,"Vec",213],[3,"Coin",214],[3,"Db",215],[6,"Block",202],[15,"u32"],[15,"u128"],[8,"Fn",216],[6,"Transaction",202],[13,"VerifyCoin",109],[13,"GenerateKey",109],[13,"RemoveKey",109],[13,"InsertKey",109],[8,"OutputFilter",125],[3,"SigCheckFilter",125],[3,"TestSigCheckFilter",150]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
